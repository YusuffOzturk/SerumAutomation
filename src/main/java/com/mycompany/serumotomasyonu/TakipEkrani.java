/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.serumotomasyonu;

import java.awt.event.MouseEvent;
import java.beans.PropertyChangeEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author yusufozturk
 */
public class TakipEkrani extends javax.swing.JDialog {

    private static final long serialVersionUID = 1L;
    DefaultTableModel model;
    HastaIslemleri islemler = new HastaIslemleri();
    
    /**
     * Creates new form TakipEkrani
     */
    public TakipEkrani(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        model = (DefaultTableModel) hasta_tablosu.getModel();
    
                HastaGoruntule();
         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        yeni_hasta_ekle = new javax.swing.JButton();
        duzenle = new javax.swing.JButton();
        sil = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        hasta_tablosu = new javax.swing.JTable();
        arama_cubugu = new javax.swing.JTextField();
        yenile = new javax.swing.JButton();
        serum_ekle = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Hasta Takip");
        setLocation(new java.awt.Point(300, 200));
        setMinimumSize(new java.awt.Dimension(981, 507));

        yeni_hasta_ekle.setText("Hasta Ekle");
        yeni_hasta_ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yeni_hasta_ekleActionPerformed(evt);
            }
        });

        duzenle.setText("Hasta Düzenle/Göster");
        duzenle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duzenleActionPerformed(evt);
            }
        });

        sil.setForeground(new java.awt.Color(204, 0, 51));
        sil.setText("Hasta Sil");
        sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                silActionPerformed(evt);
            }
        });

        hasta_tablosu.setAutoCreateRowSorter(true);
        hasta_tablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Hasta No", "Adı", "Soyadı", "Oda", "Serum Seviyesi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hasta_tablosu.setShowGrid(false);
        jScrollPane1.setViewportView(hasta_tablosu);

        arama_cubugu.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        arama_cubugu.setText("Ara");
        arama_cubugu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                arama_cubuguMouseClicked(evt);
            }
        });
        arama_cubugu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arama_cubuguActionPerformed(evt);
            }
        });
        arama_cubugu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                arama_cubuguKeyReleased(evt);
            }
        });

        yenile.setIcon(new javax.swing.ImageIcon("/Users/yusufozturk/Desktop/2.png")); // NOI18N
        yenile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yenileActionPerformed(evt);
            }
        });

        serum_ekle.setForeground(new java.awt.Color(0, 154, 50));
        serum_ekle.setText("Serum Ekle");
        serum_ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serum_ekleActionPerformed(evt);
            }
        });

        jMenu1.setText("Serum Otomasyonu");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        jMenuItem1.setText("jMenuItem1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(yeni_hasta_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(duzenle, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arama_cubugu, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yenile)
                        .addGap(128, 128, 128)
                        .addComponent(serum_ekle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sil, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(yenile, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(yeni_hasta_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(duzenle)
                        .addComponent(arama_cubugu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(serum_ekle)
                        .addComponent(sil)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void dinamikAra(String ara){
    TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
    hasta_tablosu.setRowSorter(tr);
    tr.setRowFilter(RowFilter.regexFilter(ara));
}
    private void arama_cubuguKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arama_cubuguKeyReleased
        String ara = arama_cubugu.getText();
        dinamikAra(ara);



// TODO add your handling code here:
    }//GEN-LAST:event_arama_cubuguKeyReleased

    private void arama_cubuguActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arama_cubuguActionPerformed
   
// TODO add your handling code here:
    }//GEN-LAST:event_arama_cubuguActionPerformed

    private void arama_cubuguMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arama_cubuguMouseClicked
        arama_cubugu.setText("");
    }//GEN-LAST:event_arama_cubuguMouseClicked

    private void yeni_hasta_ekleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yeni_hasta_ekleActionPerformed
    HastaEkleEkrani hastaekle = new HastaEkleEkrani(null,true);
    hastaekle.setVisible(true);
    HastaGoruntule();
    
    
    }//GEN-LAST:event_yeni_hasta_ekleActionPerformed

    private void yenileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yenileActionPerformed
    HastaGoruntule();
// TODO add your handling code here:
    }//GEN-LAST:event_yenileActionPerformed

    private void silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_silActionPerformed
    int selectedrow = hasta_tablosu.getSelectedRow();
    if (selectedrow==-1){
        if (model.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "Hasta Tablosu Şu Anda Boş!", "Hata",JOptionPane.INFORMATION_MESSAGE);
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Lütfen Silinecek Hastayı Seçiniz!", "Hata",JOptionPane.INFORMATION_MESSAGE);

        }}
    
        else{
                int id=(int) model.getValueAt(selectedrow, 0);
                islemler.hastaSil(id);
                HastaGoruntule();
                JOptionPane.showMessageDialog(null, "Hasta Başarıyla Silindi", "Başarılı!",JOptionPane.INFORMATION_MESSAGE);

                }
    
    }//GEN-LAST:event_silActionPerformed

    private void duzenleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duzenleActionPerformed
        int selectedrow = hasta_tablosu.getSelectedRow();
        
        if (selectedrow==-1){
        if (model.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "Hasta Tablosu Şu Anda Boş!", "Hata",JOptionPane.INFORMATION_MESSAGE);
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Lütfen Düzenlenecek Hastayı Seçiniz!", "Hata",JOptionPane.INFORMATION_MESSAGE);

        }}
    
        else{
            HastaDuzenle hastaduzenle= new HastaDuzenle(null,true);
            int id=(int) model.getValueAt(selectedrow, 0);
            hastaduzenle.hastalariGoster(id);
            hastaduzenle.setVisible(true);
            
            hastaduzenle.hastaGuncelle(id);
            HastaGoruntule();
            
            
            
            
                /*int id=(int) model.getValueAt(selectedrow, 0);
                String ad=model.getValueAt(selectedrow, 1);
                String soyad=model.getValueAt(selectedrow, 2);
                String ad=model.getValueAt(selectedrow, 1);
                String ad=model.getValueAt(selectedrow, 1);
                String ad=model.getValueAt(selectedrow, 1);
                */
                
                



//islemler.hastaSil(id);
                //HastaGoruntule();
                //JOptionPane.showMessageDialog(null, "Hasta Başarıyla Silindi", "Başarılı!",JOptionPane.INFORMATION_MESSAGE);

                }
    
    }//GEN-LAST:event_duzenleActionPerformed

    private void serum_ekleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serum_ekleActionPerformed
        int selectedrow = hasta_tablosu.getSelectedRow();
        
        if (selectedrow==-1){
        if (model.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "Hasta Tablosu Şu Anda Boş!", "Hata",JOptionPane.INFORMATION_MESSAGE);
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Lütfen Serum Eklenecek Hastayı Seçiniz!", "Hata",JOptionPane.INFORMATION_MESSAGE);

        }}
        else {
            HastaIslemleri islemler = new HastaIslemleri();
            
                //SerumIslemleri a = new SerumIslemleri();
              int id=(int) model.getValueAt(selectedrow, 0);
              islemler.serumEkle(id);
              //select yaz
                      
                      
                      
              //a.portOku();
              //System.out.println(a.serumDon());
              //islemler.serumEkle(id, a.serumDon());
              

        }
        
    }//GEN-LAST:event_serum_ekleActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        HastaGoruntule();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void HastaGoruntule(){
    model.setRowCount(0);
    ArrayList<Hasta> hastalar = new ArrayList<Hasta>();
    
    hastalar = islemler.hastalariGetir();
    
    if(hastalar!=null){
        for(Hasta hasta: hastalar){
            Object[] eklenecek ={hasta.getId(), hasta.getAd(),hasta.getSoyad(),hasta.getOda(),hasta.getSerum()};
            //Object[] eklenecek ={hasta.getId(), hasta.getAd(),hasta.getSoyad(),hasta.getOda(),hasta.getSerum()};
            model.addRow(eklenecek);
        }
        
    }
   
    
    
    
    }
    
    public static void main(String args[]) {
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakipEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakipEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakipEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakipEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TakipEkrani dialog = new TakipEkrani(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField arama_cubugu;
    private javax.swing.JButton duzenle;
    private javax.swing.JTable hasta_tablosu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton serum_ekle;
    private javax.swing.JButton sil;
    private javax.swing.JButton yeni_hasta_ekle;
    private javax.swing.JButton yenile;
    // End of variables declaration//GEN-END:variables
}
